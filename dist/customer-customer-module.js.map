{"version":3,"sources":["webpack:///./src/app/pages/customer/customer-add/customer-add.component.html","webpack:///./src/app/pages/customer/customer-add/customer-add.component.scss","webpack:///./src/app/pages/customer/customer-add/customer-add.component.ts","webpack:///./src/app/pages/customer/customer-list/customer-list.component.html","webpack:///./src/app/pages/customer/customer-list/customer-list.component.scss","webpack:///./src/app/pages/customer/customer-list/customer-list.component.ts","webpack:///./src/app/pages/customer/customer-routing.module.ts","webpack:///./src/app/pages/customer/customer.component.html","webpack:///./src/app/pages/customer/customer.component.scss","webpack:///./src/app/pages/customer/customer.component.ts","webpack:///./src/app/pages/customer/customer.module.ts","webpack:///./src/app/pages/customer/customer.service.ts"],"names":[],"mappings":"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","file":"customer-customer-module.js","sourcesContent":["module.exports = \"<div>\\r\\n    <h2>Add Customer </h2>  \\r\\n    <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n              <b><label class=\\\"control-label\\\">CustomerID </label></b>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group \\\">\\r\\n              <input class=\\\"form-control\\\" [(ngModel)]=\\\"customerData.CustomerID\\\" placeholder=\\\"CustomerID\\\" disabled/>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n              <b><label class=\\\"control-label required\\\">Location Name </label></b>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group\\\">\\r\\n            <select (change)=\\\"customerData.CenterID=($event.target.value)\\\" [(ngModel)]=\\\"customerData.CenterID\\\">\\r\\n                <option value=\\\"0\\\">--All--</option>\\r\\n                <option *ngFor=\\\"let center of customerData.CenterList\\\" value={{center.CenterID}}>\\r\\n                    {{center.CenterName}}\\r\\n                </option>\\r\\n            </select>\\r\\n          </div>\\r\\n    </div>  \\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n            <b><label class=\\\"control-label required\\\">Customer Name </label></b>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group \\\">\\r\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"customerData.CustomerName\\\" placeholder=\\\"CustomerName\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n            <b><label class=\\\"control-label required\\\">Date of Birth </label></b>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group\\\">\\r\\n            <input class=\\\"form-control\\\" type=\\\"date\\\" [(ngModel)]=\\\"customerData.YearOfBirth\\\" placeholder=\\\"YearOfBirth\\\" />\\r\\n        </div>\\r\\n  </div>  \\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n        <b><label class=\\\"control-label required\\\">Joining Date </label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group \\\">\\r\\n        <input class=\\\"form-control\\\" type=\\\"date\\\" [(ngModel)]=\\\"customerData.JoiningDate\\\" placeholder=\\\"JoiningDate\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n        <b><label class=\\\"control-label required\\\">Adharcard Details </label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group\\\">\\r\\n        <input class=\\\"form-control\\\" [(ngModel)]=\\\"customerData.AdharcardDetails\\\" placeholder=\\\"AdharcardDetails\\\" />\\r\\n    </div>\\r\\n</div> \\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n        <b><label class=\\\"control-label\\\">VoterID </label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group \\\">\\r\\n        <input class=\\\"form-control required\\\" [(ngModel)]=\\\"customerData.VoterID\\\" placeholder=\\\"VoterID\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n        <b><label class=\\\"control-label required\\\">ContactNumber1 </label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group\\\">\\r\\n        <input class=\\\"form-control\\\" type=\\\"number\\\" [(ngModel)]=\\\"customerData.ContactNumber1\\\" placeholder=\\\"ContactNumber1\\\" />\\r\\n    </div>\\r\\n</div>  \\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n        <b><label class=\\\"control-label\\\">ContactNumber2 </label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group \\\">\\r\\n        <input class=\\\"form-control\\\" type=\\\"number\\\" [(ngModel)]=\\\"customerData.ContactNumber2\\\" placeholder=\\\"ContactNumber2\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n        <b><label class=\\\"control-label\\\">ContactNumber3 </label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group\\\">\\r\\n        <input class=\\\"form-control\\\" type=\\\"number\\\" [(ngModel)]=\\\"customerData.ContactNumber3\\\" placeholder=\\\"ContactNumber3\\\" />\\r\\n    </div>\\r\\n</div> \\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n        <b><label class=\\\"control-label\\\">PermanentAddressLine1 </label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group \\\">\\r\\n        <input class=\\\"form-control required\\\" [(ngModel)]=\\\"customerData.PermanentAddressLine1\\\" placeholder=\\\"PermanentAddressLine1\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n        <b><label class=\\\"control-label\\\">TemporaryAddressLine1 </label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group\\\">\\r\\n        <input class=\\\"form-control\\\" [(ngModel)]=\\\"customerData.TemporaryAddressLine1\\\" placeholder=\\\"TemporaryAddressLine1\\\" />\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n        <b><label class=\\\"control-label\\\">PermanentAddressLine2 </label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group \\\">\\r\\n        <input class=\\\"form-control\\\" [(ngModel)]=\\\"customerData.PermanentAddressLine2\\\" placeholder=\\\"PermanentAddressLine2\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n        <b><label class=\\\"control-label\\\">TemporaryAddressLine2 </label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group\\\">\\r\\n        <input class=\\\"form-control\\\" [(ngModel)]=\\\"customerData.TemporaryAddressLine2\\\" placeholder=\\\"TemporaryAddressLine2\\\" />\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n        <b><label class=\\\"control-label\\\">PermanentCity </label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group \\\">\\r\\n        <input class=\\\"form-control\\\" [(ngModel)]=\\\"customerData.PermanentCity\\\" placeholder=\\\"PermanentCity\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n        <b><label class=\\\"control-label\\\">TemporaryCity </label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group\\\">\\r\\n        <input class=\\\"form-control\\\" [(ngModel)]=\\\"customerData.TemporaryCity\\\" placeholder=\\\"TemporaryCity\\\" />\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n        <b><label class=\\\"control-label\\\">PermanentPinCode </label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group \\\">\\r\\n        <input class=\\\"form-control\\\" type=\\\"number\\\" [(ngModel)]=\\\"customerData.PermanentPinCode\\\" placeholder=\\\"PermanentPinCode\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n        <b><label class=\\\"control-label\\\">TemporaryPinCode </label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group\\\">\\r\\n        <input class=\\\"form-control\\\" type=\\\"number\\\" [(ngModel)]=\\\"customerData.TemporaryPinCode\\\" placeholder=\\\"TemporaryPinCode\\\" />\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n        <b><label class=\\\"control-label\\\">Income Details </label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group \\\">\\r\\n        <input class=\\\"form-control\\\" [(ngModel)]=\\\"customerData.IncomeNoteOne\\\" placeholder=\\\"Income Source\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n        <b><label class=\\\"control-label\\\">Income Amount </label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group\\\">\\r\\n        <input class=\\\"form-control\\\" type=\\\"number\\\" [(ngModel)]=\\\"customerData.IncomeAmountOne\\\" placeholder=\\\"Income Amount\\\" />\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n        <b><label class=\\\"control-label\\\">Expences Details </label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group \\\">\\r\\n        <input class=\\\"form-control\\\" type=\\\"number\\\" [(ngModel)]=\\\"customerData.IncomeNoteTwo\\\" placeholder=\\\"Expences Details\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n        <b><label class=\\\"control-label\\\">Expences Amount </label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group\\\">\\r\\n        <input class=\\\"form-control\\\" type=\\\"number\\\" [(ngModel)]=\\\"customerData.IncomeAmountTwo\\\" (blur)=\\\"calculateSuplusAmount()\\\" placeholder=\\\"Expence Amount\\\" />\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n        <b><label class=\\\"control-label\\\">Surplus Details </label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group \\\">\\r\\n        <input class=\\\"form-control\\\" type=\\\"number\\\" [(ngModel)]=\\\"customerData.IncomeNoteThree\\\" placeholder=\\\"Surplus Details\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n        <b><label class=\\\"control-label\\\">Surplus Amount </label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group\\\">\\r\\n        <input class=\\\"form-control\\\" [(ngModel)]=\\\"customerData.IncomeAmountThree\\\" placeholder=\\\"Surplus Amount\\\" />\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n        <b><label class=\\\"control-label\\\">Reg EnterBy </label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group \\\">\\r\\n        <select (change)=\\\"customerData.RegStatusEnterdByID=($event.target.value)\\\" [(ngModel)]=\\\"customerData.RegStatusEnterdByID\\\">\\r\\n            <option value=\\\"0\\\">--All--</option>\\r\\n            <option *ngFor=\\\"let useAcc of customerData.UserAccountList\\\" value={{useAcc.UserAccountID}}>\\r\\n                {{useAcc.FullName}}\\r\\n            </option>\\r\\n        </select>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n        <b><label class=\\\"control-label\\\">RegEnterdByDate </label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group\\\">\\r\\n        <input class=\\\"form-control\\\" type=\\\"date\\\" [(ngModel)]=\\\"customerData.RegStatusEnterdByDate\\\" placeholder=\\\"RegStatusEnterdByDate\\\" />\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n        <b><label class=\\\"control-label\\\">Reg Review By </label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group \\\">\\r\\n        <select (change)=\\\"customerData.RegStatusReviewedByID=($event.target.value)\\\" [(ngModel)]=\\\"customerData.RegStatusReviewedByID\\\">\\r\\n            <option value=\\\"0\\\">--All--</option>\\r\\n            <option *ngFor=\\\"let useAcc of customerData.UserAccountList\\\" value={{useAcc.UserAccountID}}>\\r\\n                {{useAcc.FullName}}\\r\\n            </option>\\r\\n        </select>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n        <b><label class=\\\"control-label\\\">RegReviewedByDate </label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group\\\">\\r\\n        <input class=\\\"form-control\\\" type=\\\"date\\\" [(ngModel)]=\\\"customerData.RegStatusReviewedByDate\\\" placeholder=\\\"RegStatusReviewedByDate\\\" />\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n        <b><label class=\\\"control-label\\\">Reg Approve By </label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group \\\">\\r\\n        <select (change)=\\\"customerData.RegStatusApprovedByID=($event.target.value)\\\" [(ngModel)]=\\\"customerData.RegStatusApprovedByID\\\">\\r\\n            <option value=\\\"0\\\">--All--</option>\\r\\n            <option *ngFor=\\\"let useAcc of customerData.UserAccountList\\\" value={{useAcc.UserAccountID}}>\\r\\n                {{useAcc.FullName}}\\r\\n            </option>\\r\\n        </select>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n        <b><label class=\\\"control-label\\\">RegApprovedByDate </label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group\\\">\\r\\n        <input class=\\\"form-control\\\" type=\\\"date\\\" [(ngModel)]=\\\"customerData.RegStatusApprovedByDate\\\" placeholder=\\\"RegStatusApprovedByDate\\\" />\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n        <b><label class=\\\"control-label\\\">Entty Comments </label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group \\\">\\r\\n        <input class=\\\"form-control\\\"  [(ngModel)]=\\\"customerData.EntryComments\\\" placeholder=\\\"Reg Enter Comments\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n            <b><label class=\\\"control-label\\\">Other KYC </label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group\\\">\\r\\n            <input class=\\\"form-control\\\"  [(ngModel)]=\\\"customerData.KYCDetails\\\" placeholder=\\\"Other KYC Documents\\\" />\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n        <b><label class=\\\"control-label\\\">Review Comments </label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group \\\">\\r\\n        <input class=\\\"form-control\\\"  [(ngModel)]=\\\"customerData.ReviewComments\\\"  placeholder=\\\"Reg Review Comments\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n            <b><label class=\\\"control-label\\\"> Form Status</label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group\\\">\\r\\n            <select (change)=\\\"customerData.CustomerRegStatusID=($event.target.value)\\\" [(ngModel)]=\\\"customerData.CustomerRegStatusID\\\">\\r\\n                    <option value=\\\"0\\\">--All--</option>\\r\\n                    <option *ngFor=\\\"let regStatus of customerData.CustomerRegStatusList\\\" value={{regStatus.CustomerRegStatusID}}>\\r\\n                        {{regStatus.CustomerRegStatus}}\\r\\n                    </option>\\r\\n                </select>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n        <b><label class=\\\"control-label\\\">Approve Comments </label></b>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group \\\">\\r\\n        <input class=\\\"form-control\\\"  [(ngModel)]=\\\"customerData.ApproveComments\\\"  placeholder=\\\"Reg Approve Comments\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 form-group\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group\\\">\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n    <button (click)=\\\"addCustomer()\\\">{{customerData.ActionButtonName}}</button>\\r\\n</div>  \"","module.exports = \"label.required {\\n  font-weight: bold; }\\n\\nlabel.required:after {\\n  color: #e32;\\n  content: ' *';\\n  display: inline; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvY3VzdG9tZXIvY3VzdG9tZXItYWRkL0M6XFxVc2Vyc1xcaHBcXERlc2t0b3BcXFZpZGl5YWxVSS1tYXN0ZXJcXFZpZGl5YWxVSS1tYXN0ZXIvc3JjXFxhcHBcXHBhZ2VzXFxjdXN0b21lclxcY3VzdG9tZXItYWRkXFxjdXN0b21lci1hZGQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBaUIsRUFDcEI7O0FBQ0Q7RUFDSSxZQUFXO0VBQ1gsY0FBYTtFQUNiLGdCQUFjLEVBQ2pCIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvY3VzdG9tZXIvY3VzdG9tZXItYWRkL2N1c3RvbWVyLWFkZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImxhYmVsLnJlcXVpcmVkIHtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcbmxhYmVsLnJlcXVpcmVkOmFmdGVyIHtcclxuICAgIGNvbG9yOiAjZTMyO1xyXG4gICAgY29udGVudDogJyAqJztcclxuICAgIGRpc3BsYXk6aW5saW5lO1xyXG59Il19 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { CustomerService } from '../customer.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-customer-add',\n  templateUrl: './customer-add.component.html',\n  styleUrls: ['./customer-add.component.scss']\n})\nexport class CustomerAddComponent implements OnInit {\n\n  constructor(public rest: CustomerService, private route: ActivatedRoute, private router: Router) { }\n  @Input() customerData: any = {\n    CustomerID: 0,\n    CenterID: 0,\n    CenterList: [],\n    CustomerName: '',\n    YearOfBirth: '',\n    KYCDetails: '',\n    AdharcardDetails: '',\n    VoterID: '',\n    ContactNumber1: '',\n    ContactNumber2: '',\n    ContactNumber3: '',\n    PermanentAddressLine1 : '',\n    PermanentAddressLine2 : '',\n    PermanentCity : '',\n    PermanentPinCode : '',\n    TemporaryAddressLine1 : '',\n    TemporaryAddressLine2 : '',\n    TemporaryCity: '',\n    TemporaryPinCode : '',\n    JoiningDate : '',\n    IsActive : 0,\n    IncomeType: [],\n    IncomeTypeOne: 0,\n    IncomeTypeTwo: 0,\n    IncomeTypeThree: 0,\n    IncomeNoteOne: '',\n    IncomeNoteTwo: '',\n    IncomeNoteThree: '',\n    IncomeAmountOne: '',\n    IncomeAmountTwo: '',\n    IncomeAmountThree: '',\n    CustomerRegStatusList: [],\n    CustomerRegStatusID: '',\n    UserAccountList: [],\n    RegStatusEnterdByID: '',\n    RegStatusEnterdByDate: '',\n    RegStatusReviewedByID: '',\n    RegStatusReviewedByDate: '',\n    RegStatusApprovedByID: '',\n    RegStatusApprovedByDate: '',\n    CreatedDate: '',\n    CreatedBy: '',\n    EntryComments:'',\n    ReviewComments:'',\n    ApproveComments:'',\n    PageType:'',\n    ActionButtonName:''\n    };\n\n    calculateSuplusAmount(){\n      this.customerData.IncomeAmountThree = (this.customerData.IncomeAmountOne-this.customerData.IncomeAmountTwo) \n     }\n  \n    ngOnInit() {\n    this.rest.getCustomer(this.route.snapshot.params['id']).subscribe((data: {}) => {\n      console.log(data);\n      this.customerData = data;\n      if(this.route.snapshot.params['PageType']=='AddPage'){\n        this.customerData.PageType = 'AddPage';\n        this.customerData.ActionButtonName = 'Add Customer';\n      }\n      if(this.route.snapshot.params['PageType']=='EditPage'){\n        this.customerData.PageType = 'EditPage';\n        this.customerData.ActionButtonName = 'Update';\n      }\n      if(this.route.snapshot.params['PageType']=='ViewPage'){\n        this.customerData.PageType = 'ViewPage';\n        this.customerData.ActionButtonName = 'Back';\n      }\n      if(this.route.snapshot.params['PageType']=='DeletePage'){\n        this.customerData.PageType = 'DeletePage';\n        this.customerData.ActionButtonName = 'Delete';\n      }\n    });\n  }\n  \n\n  addCustomer() {\n    const validationErrors = this.rest.requiredFieldValidationCustomer(this.customerData);\n    var varlidationFields ='';\n\n    if (validationErrors.length > 0) {\n      \n     for (var i=0;i< validationErrors.length;i++) {\n       if((i + 1)===validationErrors.length) {\n        varlidationFields = varlidationFields + (i+1) + \" .\"+ validationErrors[i];\n       } else {\n      varlidationFields = varlidationFields + (i+1) + \" .\"+ validationErrors[i] + ' ,';\n       }\n     }\n      alert('Please fill ' + varlidationFields);\n    } else {\n      if(this.customerData.PageType == 'AddPage'){\n    this.rest.addCustomer(this.customerData).subscribe((result) => {\n       this.router.navigate(['pages/customer/customer-list']);\n     }, (err) => {\n       console.log(err);\n     }); \n    }\n    if(this.customerData.PageType == 'EditPage'){\n      this.rest.updateCustomer(this.customerData).subscribe((result) => {\n        this.router.navigate(['pages/customer/customer-list']);\n      }, (err) => {\n        console.log(err);\n      });\n    }\n    if(this.customerData.PageType == 'ViewPage'){\n      this.router.navigate(['pages/customer/customer-list']); \n    }\n    if(this.customerData.PageType == 'DeletePage'){\n      this.rest.deleteCustomer(this.route.snapshot.params['id']).subscribe((result) => {\n        this.router.navigate(['pages/customer/customer-list']);\n      }, (err) => {\n        console.log(err);\n      });\n    }\n  }\n  }\n\n}\n","module.exports = \"<div>\\n  <button (click)=\\\"add()\\\">\\n    Add New \\n  </button>\\n</div>  \\n<table class=\\\"table table-bordered\\\">\\n  <thead>\\n    <tr>\\n      <th scope=\\\"col\\\">#</th>\\n      <th scope=\\\"col\\\">CustomerNumber</th>\\n      <th scope=\\\"col\\\">CustomerName</th>     \\n      <th scope=\\\"col\\\">Actions</th>\\n    </tr>\\n  </thead>\\n  <tbody *ngFor=\\\"let cust of CustomerList; let i=index;\\\">\\n    <tr>\\n      <th scope=\\\"row\\\">{{i+1}}</th>      \\n      <td>{{cust.CustomerID}}</td>\\n      <td>{{cust.CustomerName}}</td>       \\n      <td>          \\n        <a routerLink=\\\"/pages/customer/customer-add/{{cust.CustomerID}}/EditPage\\\">\\n          Edit\\n        </a>\\n        <a routerLink=\\\"/pages/customer/customer-add/{{cust.CustomerID}}/ViewPage\\\">\\n          View\\n        </a>\\n        <a routerLink=\\\"/pages/customer/customer-add/{{cust.CustomerID}}/DeletePage\\\">\\n          Delete\\n        </a>\\n      </td>\\n    </tr>\\n   \\n  </tbody>\\n</table>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2N1c3RvbWVyL2N1c3RvbWVyLWxpc3QvY3VzdG9tZXItbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from '../customer.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {MatPaginator, MatSort, MatTableDataSource, MatFormField} from '@angular/material';\n\n@Component({\n  selector: 'app-customer-list',\n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.scss']\n})\n\nexport class CustomerListComponent implements OnInit {\n\n  CustomerList: CustomerListData[] = [];\n\n  constructor(public rest: CustomerService, private route: ActivatedRoute, private router: Router) {\n    this.CustomerList = [];\n    this.rest.getCustomers().subscribe((data: {}) => {\n      console.log(data);\n      this.CustomerList = data as CustomerListData[];\n    });\n\n   }\n\n   ngOnInit() {\n    }\n\n    add() {\n    this.router.navigate(['pages/customer/customer-add/0/AddPage']);\n    \n    }\n\n    delete(id) {\n    this.rest.deleteCustomer(id)\n      .subscribe(res => {\n          this.getCustomers();\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n  getCustomers() {\n    this.CustomerList = [];\n    this.rest.getCustomers().subscribe((data: {}) => {\n      console.log(data);\n      this.CustomerList = data as CustomerListData[];\n\n    });\n  }\n\n}\n\nexport interface CustomerListData {\n  CustomerID: Number;\n  CenterID: Number;\n  CustomerName: string;\n  YearOfBirth: string;\n  KYCDetails: string;\n  AdharcardDetails: string;\n  VoterID: string;\n  ContactNumber1: string;\n  ContactNumber2: string;\n  ContactNumber3: string;\n    PermanentAddressLine1 : string;\n    PermanentAddressLine2 : string;\n    PermanentCity : string;\n    PermanentPinCode : string;\n    TemporaryAddressLine1 : string;\n    TemporaryAddressLine2 : string;\n    TemporaryCity: string;\n    TemporaryPinCode : string;\n    JoiningDate : string;\n    IsActive : Number;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CustomerComponent } from './customer.component';\nimport { CustomerAddComponent } from './customer-add/customer-add.component';\nimport { CustomerListComponent} from './customer-list/customer-list.component';\n\n\nconst routes: Routes = [\n  {\n      path: '',\n      component: CustomerComponent,\n      children: [\n        { path: '', redirectTo: 'customer'},\n        { path: 'customer-list', component: CustomerListComponent},\n        { path: 'customer-add/:id/:PageType', component: CustomerAddComponent},\n        { path: 'customer', component: CustomerListComponent}\n      ]\n  }\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CustomerRoutingModule { }\n","module.exports = \"\\n    <router-outlet></router-outlet>\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2N1c3RvbWVyL2N1c3RvbWVyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pages',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.scss']\n})\nexport class CustomerComponent implements OnInit {\n\n  collapedSideBar: boolean;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  receiveCollapsed($event) {\n    this.collapedSideBar = $event;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CustomerComponent } from './customer.component';\nimport { CustomerAddComponent } from './customer-add/customer-add.component';\nimport { CustomerRoutingModule } from './customer-routing.module';\nimport { CustomerListComponent } from './customer-list/customer-list.component';\nimport { FormsModule } from '@angular/forms';\n\nimport {\n  MatFormFieldModule,\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatStepperModule,\n} from '@angular/material';\n\n@NgModule({\n  declarations: [CustomerComponent, CustomerAddComponent,CustomerListComponent],\n  imports: [\n    CommonModule,\n    CustomerRoutingModule,\n    TranslateModule,\n    NgbDropdownModule,\n    FormsModule,\n    MatTableModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatStepperModule\n  ]\n})\nexport class CustomerModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n  static readonly endpoint = 'http://www.service.vidiyal.in/API/';\n  static readonly endpoint1 = 'http://localhost:50175/API/';\n\n  static readonly httpOptions = {\n    headers: new HttpHeaders({\n    'Content-Type':  'application/json'\n    })\n    };\n\n  constructor(private http: HttpClient) {\n  }\n\n  public customerFormReqFieldValidationList: string[] = [];\n\n\n  getCustomers(): Observable<any> {\n    return this.http.get(CustomerService.endpoint + 'Customers').pipe(\n      map(this.extractData));\n  }\n  getCustomer(id): Observable<any> {\n    return this.http.get(CustomerService.endpoint + 'Customers/' + id).pipe(\n      map(this.extractData));\n  }\n\n  addCustomer(CustomerData): Observable<any> {\n    return this.http.post<any>(CustomerService.endpoint + 'Customers', JSON.stringify(CustomerData), CustomerService.httpOptions).pipe(\n       tap((customer) => console.log(`added customer w/ id=${CustomerData.CustomerID}`)),\n       catchError(this.handleError<any>('addCustomer'))\n    );\n  }\n\n  updateCustomer (CustomerData): Observable<any> {\n    console.log(CustomerData);\n    return this.http.post<any>(CustomerService.endpoint + 'Customers', JSON.stringify(CustomerData), CustomerService.httpOptions).pipe(\n      tap((customer) => console.log(`update customer w/ id=${CustomerData.CustomerID}`)),\n      catchError(this.handleError<any>('update'))\n    );\n  }\n\n  deleteCustomer (id): Observable<any> {\n    return this.http.get(CustomerService.endpoint + 'DropCustomer/' + id).pipe(\n      map(this.extractData));\n  }\n\n  requiredFieldValidationCustomer (CustomerData): string[] {\n\n    this.customerFormReqFieldValidationList = [];\n\n    if (CustomerData.CenterID === 0 ) {\n      this.customerFormReqFieldValidationList.push('Center Name');\n    }\n    if (CustomerData.CustomerName == null || CustomerData.CustomerName === '' ) {\n      this.customerFormReqFieldValidationList.push('Customer Name');\n    }\n    if (CustomerData.YearOfBirth == null || CustomerData.YearOfBirth === '' ) {\n      this.customerFormReqFieldValidationList.push('Date Of Birth');\n    }\n    if (CustomerData.JoiningDate == null || CustomerData.JoiningDate === '' ) {\n      this.customerFormReqFieldValidationList.push('Joining Date');\n    }\n    if (CustomerData.AdharcardDetails == null || CustomerData.AdharcardDetails === '' ) {\n      this.customerFormReqFieldValidationList.push('Adharcard Details');\n    }\n    if (CustomerData.VoterID == null || CustomerData.VoterID === '' ) {\n      this.customerFormReqFieldValidationList.push('VoterID');\n    }\n    if (CustomerData.ContactNumber1 == null || CustomerData.ContactNumber1 === '' ) {\n      this.customerFormReqFieldValidationList.push('Contact Number');\n    }\n    if (CustomerData.PermanentAddressLine1 == null || CustomerData.PermanentAddressLine1 === '' ) {\n      this.customerFormReqFieldValidationList.push('Permanent Address');\n    }\n\n\n    return this.customerFormReqFieldValidationList;\n  }\n\n\n  private extractData(res: Response) {\n    const body = res;\n    return body || { };\n  }\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      console.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n"],"sourceRoot":""}