{"version":3,"sources":["webpack:///./src/app/pages/user-account/user-account-add/user-account-add.component.html","webpack:///./src/app/pages/user-account/user-account-add/user-account-add.component.scss","webpack:///./src/app/pages/user-account/user-account-add/user-account-add.component.ts","webpack:///./src/app/pages/user-account/user-account-delete/user-account-delete.component.html","webpack:///./src/app/pages/user-account/user-account-delete/user-account-delete.component.scss","webpack:///./src/app/pages/user-account/user-account-delete/user-account-delete.component.ts","webpack:///./src/app/pages/user-account/user-account-edit/user-account-edit.component.html","webpack:///./src/app/pages/user-account/user-account-edit/user-account-edit.component.scss","webpack:///./src/app/pages/user-account/user-account-edit/user-account-edit.component.ts","webpack:///./src/app/pages/user-account/user-account-list/user-account-list.component.html","webpack:///./src/app/pages/user-account/user-account-list/user-account-list.component.scss","webpack:///./src/app/pages/user-account/user-account-list/user-account-list.component.ts","webpack:///./src/app/pages/user-account/user-account-routing.module.ts","webpack:///./src/app/pages/user-account/user-account-view/user-account-view.component.html","webpack:///./src/app/pages/user-account/user-account-view/user-account-view.component.scss","webpack:///./src/app/pages/user-account/user-account-view/user-account-view.component.ts","webpack:///./src/app/pages/user-account/user-account.component.html","webpack:///./src/app/pages/user-account/user-account.component.scss","webpack:///./src/app/pages/user-account/user-account.component.ts","webpack:///./src/app/pages/user-account/user-account.module.ts","webpack:///./src/app/pages/user-account/user-account.service.ts"],"names":[],"mappings":"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","file":"user-account-user-account-module.js","sourcesContent":["module.exports = \"<div>\\n  <h2>Add User Account</h2>\\n  <div>\\n      \\n    <label>RoleID:\\n      <input [(ngModel)]=\\\"userAccountData.RoleID\\\" placeholder=\\\"RoleID\\\"/>\\n    </label><br>\\n    <label>UserAccountName:\\n      <input [(ngModel)]=\\\"userAccountData.UserAccountName\\\" placeholder=\\\"UserAccount Name\\\"/>\\n    </label><br>\\n    <label>ContactNumber:\\n      <input [(ngModel)]=\\\"userAccountData.ContactNumber\\\" placeholder=\\\"Contact Number\\\"/>\\n    </label><br>\\n    <label>UserName:\\n      <input [(ngModel)]=\\\"userAccountData.UserName\\\" placeholder=\\\"UserName\\\"/>\\n    </label><br>\\n    <label>Password:\\n      <input [(ngModel)]=\\\"userAccountData.Password\\\" placeholder=\\\"Password\\\"/>\\n    </label><br>\\n    <label>CreatedDate:\\n      <input [(ngModel)]=\\\"userAccountData.CreatedDate\\\" placeholder=\\\"CreatedDate\\\"/>\\n    </label><br>\\n    <label>CreatedBy:\\n      <input [(ngModel)]=\\\"userAccountData.CreatedBy\\\" placeholder=\\\"CreatedBy\\\"/>\\n    </label><br>\\n    <label>LastModifiedDate:\\n      <input [(ngModel)]=\\\"userAccountData.LastModifiedDate\\\" placeholder=\\\"LastModifiedDate\\\"/>\\n    </label><br>\\n    <label>LastModifiedBy:\\n      <input [(ngModel)]=\\\"userAccountData.LastModifiedBy\\\" placeholder=\\\"LastModifiedBy\\\"/>\\n    </label><br>\\n    <label>EMailAddress:\\n      <input [(ngModel)]=\\\"userAccountData.EMailAddress\\\" placeholder=\\\"EMailAddress\\\"/>\\n    </label><br>\\n    <label>ContactAddress:\\n      <input [(ngModel)]=\\\"userAccountData.ContactAddress\\\" placeholder=\\\"ContactAddress\\\"/>\\n    </label><br>\\n    \\n  </div>\\n  <button (click)=\\\"addUserAccount()\\\">Save</button>\\n</div>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3VzZXItYWNjb3VudC91c2VyLWFjY291bnQtYWRkL3VzZXItYWNjb3VudC1hZGQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit ,Input} from '@angular/core';\nimport { UserAccountService } from '../user-account.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-user-account-add',\n  templateUrl: './user-account-add.component.html',\n  styleUrls: ['./user-account-add.component.scss']\n})\nexport class UserAccountAddComponent implements OnInit {\n\n  constructor(public rest:UserAccountService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  @Input() userAccountData = { \n     UserAccountID :0\n    ,RoleID :0\n    ,UserAccountName :''\n    ,ContactNumber :''\n    ,UserName :''\n    ,Password:''\n    ,CreatedDate :''\n    ,CreatedBy :''\n    ,LastModifiedDate :''\n    ,LastModifiedBy :''\n    ,EMailAddress :''\n    ,ContactAddress :''\n  };\n\n\n  \n\n  addUserAccount() {\n    this.rest.addUserAccount(this.userAccountData).subscribe((result) => {\n      this.router.navigate(['pages/user-account/user-account-list']);\n    }, (err) => {\n      console.log(err);\n    });\n  }\n\n}\n","module.exports = \"<div>\\n  <h2>Delete User Account</h2>\\n  <div>\\n    <input type=\\\"hidden\\\" [(ngModel)]=\\\"userAccountData.UserAccountID\\\"/>       \\n    <label>RoleID:\\n      <input [(ngModel)]=\\\"userAccountData.RoleID\\\" placeholder=\\\"RoleID\\\" disabled/>\\n    </label><br>\\n    <label>UserAccountName:\\n      <input [(ngModel)]=\\\"userAccountData.UserAccountName\\\" placeholder=\\\"UserAccountName\\\" disabled/>\\n    </label><br>\\n    <label>ContactNumber:\\n      <input [(ngModel)]=\\\"userAccountData.ContactNumber\\\" placeholder=\\\"ContactNumber\\\" disabled/>\\n    </label><br>\\n    <label>UserName:\\n      <input [(ngModel)]=\\\"userAccountData.UserName\\\" placeholder=\\\"UserName\\\" disabled/>\\n    </label><br>\\n    <label>Password:\\n      <input [(ngModel)]=\\\"userAccountData.Password\\\" placeholder=\\\"Password\\\" disabled/>\\n    </label><br>\\n    <label>CreatedDate:\\n      <input [(ngModel)]=\\\"userAccountData.CreatedDate\\\" placeholder=\\\"CreatedDate\\\" disabled/>\\n    </label><br>\\n    <label>CreatedBy:\\n      <input [(ngModel)]=\\\"userAccountData.CreatedBy\\\" placeholder=\\\"CreatedBy\\\" disabled/>\\n    </label><br>\\n    <label>LastModifiedDate:\\n      <input [(ngModel)]=\\\"userAccountData.LastModifiedDate\\\" placeholder=\\\"LastModifiedDate\\\" disabled/>\\n    </label><br>\\n    <label>LastModifiedBy:\\n      <input [(ngModel)]=\\\"userAccountData.LastModifiedBy\\\" placeholder=\\\"LastModifiedBy\\\" disabled/>\\n    </label><br>\\n    <label>EMailAddress:\\n      <input [(ngModel)]=\\\"userAccountData.EMailAddress\\\" placeholder=\\\"EMailAddress\\\" disabled/>\\n    </label><br>\\n    <label>ContactAddress:\\n      <input [(ngModel)]=\\\"userAccountData.ContactAddress\\\" placeholder=\\\"ContactAddress\\\" disabled/>\\n    </label><br>\\n    \\n  </div>\\n  <button (click)=\\\"deleteUserAccount()\\\">Delete</button>\\n</div>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3VzZXItYWNjb3VudC91c2VyLWFjY291bnQtZGVsZXRlL3VzZXItYWNjb3VudC1kZWxldGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { UserAccountService } from '../user-account.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-account-delete',\n  templateUrl: './user-account-delete.component.html',\n  styleUrls: ['./user-account-delete.component.scss']\n})\nexport class UserAccountDeleteComponent implements OnInit {\n\n  @Input() userAccountData:any = { \n    UserAccountID :0\n   ,RoleID :0\n   ,UserAccountName :''\n   ,ContactNumber :''\n   ,UserName :''\n   ,Password:''\n   ,CreatedDate :''\n   ,CreatedBy :''\n   ,LastModifiedDate :''\n   ,LastModifiedBy :''\n   ,EMailAddress :''\n   ,ContactAddress :''\n };\n\n  constructor(public rest:UserAccountService, private route: ActivatedRoute, private router: Router){\n\n  }\n\n\n ngOnInit() {\n    this.rest.getUserAccount(this.route.snapshot.params['id']).subscribe((data: {}) => {\n      console.log(data);\n      this.userAccountData = data;\n    });  \n  }\n\n  deleteUserAccount() {\n    this.rest.deleteUserAccount(this.route.snapshot.params['id']).subscribe((result) => {\n      this.router.navigate(['pages/user-account/user-account-list']);\n    }, (err) => {\n      console.log(err);\n    });\n    \n  }\n\n}\n","module.exports = \"<div>\\n  <h2>Update User Account</h2>\\n  <div>\\n    <input type=\\\"hidden\\\" [(ngModel)]=\\\"userAccountData.UserAccountID\\\"/>       \\n    <label>RoleID:\\n      <input [(ngModel)]=\\\"userAccountData.RoleID\\\" placeholder=\\\"RoleID\\\"/>\\n    </label><br>\\n    <label>UserAccountName:\\n      <input [(ngModel)]=\\\"userAccountData.UserAccountName\\\" placeholder=\\\"UserAccountName\\\"/>\\n    </label><br>\\n    <label>ContactNumber:\\n      <input [(ngModel)]=\\\"userAccountData.ContactNumber\\\" placeholder=\\\"ContactNumber\\\"/>\\n    </label><br>\\n    <label>UserName:\\n      <input [(ngModel)]=\\\"userAccountData.UserName\\\" placeholder=\\\"UserName\\\"/>\\n    </label><br>\\n    <label>Password:\\n      <input [(ngModel)]=\\\"userAccountData.Password\\\" placeholder=\\\"Password\\\"/>\\n    </label><br>\\n    <label>CreatedDate:\\n      <input [(ngModel)]=\\\"userAccountData.CreatedDate\\\" placeholder=\\\"CreatedDate\\\"/>\\n    </label><br>\\n    <label>CreatedBy:\\n      <input [(ngModel)]=\\\"userAccountData.CreatedBy\\\" placeholder=\\\"CreatedBy\\\"/>\\n    </label><br>\\n    <label>LastModifiedDate:\\n      <input [(ngModel)]=\\\"userAccountData.LastModifiedDate\\\" placeholder=\\\"LastModifiedDate\\\"/>\\n    </label><br>\\n    <label>LastModifiedBy:\\n      <input [(ngModel)]=\\\"userAccountData.LastModifiedBy\\\" placeholder=\\\"LastModifiedBy\\\"/>\\n    </label><br>\\n    <label>EMailAddress:\\n      <input [(ngModel)]=\\\"userAccountData.EMailAddress\\\" placeholder=\\\"EMailAddress\\\"/>\\n    </label><br>\\n    <label>ContactAddress:\\n      <input [(ngModel)]=\\\"userAccountData.ContactAddress\\\" placeholder=\\\"ContactAddress\\\"/>\\n    </label><br>\\n    \\n  </div>\\n  <button (click)=\\\"updateUserAccount()\\\">Update</button>\\n</div>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3VzZXItYWNjb3VudC91c2VyLWFjY291bnQtZWRpdC91c2VyLWFjY291bnQtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { UserAccountService } from '../user-account.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-account-edit',\n  templateUrl: './user-account-edit.component.html',\n  styleUrls: ['./user-account-edit.component.scss']\n})\nexport class UserAccountEditComponent implements OnInit {\n\n  @Input() userAccountData:any = { \n    UserAccountID :0\n   ,RoleID :0\n   ,UserAccountName :''\n   ,ContactNumber :''\n   ,UserName :''\n   ,Password:''\n   ,CreatedDate :''\n   ,CreatedBy :''\n   ,LastModifiedDate :''\n   ,LastModifiedBy :''\n   ,EMailAddress :''\n   ,ContactAddress :''\n };\n\n  constructor(public rest:UserAccountService, private route: ActivatedRoute, private router: Router){\n\n  }\n\n  ngOnInit() {\n    this.rest.getUserAccount(this.route.snapshot.params['id']).subscribe((data: {}) => {\n      console.log(data);\n      this.userAccountData = data;\n    });  \n  }\n\n  updateUserAccount() {\n    this.rest.updateUserAccount(this.userAccountData).subscribe((result) => {\n      this.router.navigate(['pages/user-account/user-account-list']);\n    }, (err) => {\n      console.log(err);\n    });\n    //this.route.snapshot.params['id']\n  }\n\n}\n","module.exports = \"<div>\\n  <button (click)=\\\"add()\\\">\\n    Add New \\n  </button>\\n</div>  \\n<table class=\\\"table table-bordered\\\">\\n  <thead>\\n    <tr>\\n      <th scope=\\\"col\\\">#</th>\\n      <th scope=\\\"col\\\">UserAccountName</th>\\n      <th scope=\\\"col\\\">ContactNumber</th>\\n      <th scope=\\\"col\\\">Actions</th>\\n    </tr>\\n  </thead>\\n  <tbody *ngFor=\\\"let userAccount of UserAccountList; let i=index;\\\">\\n    <tr>\\n      <th scope=\\\"row\\\">{{i+1}}</th>\\n      <td>{{userAccount.UserAccountName}}</td>\\n      <td>{{userAccount.ContactNumber}}</td>\\n      <td>\\n          \\n        <a routerLink=\\\"/pages/user-account/user-account-edit/{{userAccount.UserAccountID}}\\\">\\n          Edit\\n        </a>\\n        <a routerLink=\\\"/pages/user-account/user-account-view/{{userAccount.UserAccountID}}\\\">\\n          View\\n        </a>\\n        <a routerLink=\\\"/pages/user-account/user-account-delete/{{userAccount.UserAccountID}}\\\">\\n          Delete\\n        </a>\\n      </td>\\n    </tr>\\n   \\n  </tbody>\\n</table>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3VzZXItYWNjb3VudC91c2VyLWFjY291bnQtbGlzdC91c2VyLWFjY291bnQtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit,ViewChild} from '@angular/core';\nimport { UserAccountService } from '../user-account.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-account-list',\n  templateUrl: './user-account-list.component.html',\n  styleUrls: ['./user-account-list.component.scss']\n})\nexport class UserAccountListComponent implements OnInit {\n\n  UserAccountList:UserAccountData[] = [];\n\n  constructor(public rest:UserAccountService, private route: ActivatedRoute, private router: Router) { \n    this.UserAccountList = [];\n    this.rest.getUserAccounts().subscribe((data: {}) => {\n      console.log(data);\n      this.UserAccountList = data as UserAccountData[]\n    \n    });\n  }\n\n  ngOnInit() {\n    this.getUserAccounts();\n  }\n\n  add() {\n    this.router.navigate(['pages/user-account/user-account-add']);\n  }\n  delete(id) {\n    this.rest.addUserAccount(id)\n      .subscribe(res => {\n          this.getUserAccounts();\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n  getUserAccounts() {\n    this.UserAccountList = [];\n    this.rest.getUserAccounts().subscribe((data: {}) => {\n      console.log(data);\n      this.UserAccountList = data as UserAccountData[]\n    \n    });\n  } \n\n}\nexport interface UserAccountData {\n \n  UserAccountID :Number;\n  RoleID :Number;\n  UserAccountName :string;\n  ContactNumber :string;\n  UserName :string;\n  Password:string;\n  CreatedDate :string;\n  CreatedBy :string;\n  LastModifiedDate:string;\n  LastModifiedBy:string;\n  EMailAddress :string;\n  ContactAddress :string;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserAccountComponent } from './user-account.component';\nimport { UserAccountListComponent } from './user-account-list/user-account-list.component';\nimport { UserAccountAddComponent} from './user-account-add/user-account-add.component';\nimport {UserAccountEditComponent} from './user-account-edit/user-account-edit.component';\nimport {UserAccountViewComponent} from './user-account-view/user-account-view.component';\nimport {UserAccountDeleteComponent}from './user-account-delete/user-account-delete.component';\n\n\n  const routes: Routes = [\n    {\n        path: '',\n        component: UserAccountComponent\n    }\n  ];\n  \n  \n\nconst routes1: Routes = [\n  {\n      path: '',\n      component: UserAccountComponent,\n      children:[\n        { path:'',redirectTo:'user-account'},\n        { path:'user-account-list',component:UserAccountListComponent},\n        { path:'user-account-add',component:UserAccountAddComponent},\n        { path:'user-account-edit/:id',component:UserAccountEditComponent},\n        { path:'user-account-view/:id',component:UserAccountViewComponent},\n        { path:'user-account-delete/:id',component:UserAccountDeleteComponent},\n        { path:'user-account', component: UserAccountListComponent}\n      ]\n  }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes1)],\n    exports: [RouterModule]\n})\n\n  @NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n  })\n  export class UserAccountRoutingModule { }","module.exports = \"<div>\\n  <h2>View User Account</h2>\\n  <div>\\n    <input type=\\\"hidden\\\" [(ngModel)]=\\\"userAccountData.UserAccountID\\\"/>       \\n    <label>RoleID:\\n      <input [(ngModel)]=\\\"userAccountData.RoleID\\\" placeholder=\\\"RoleID\\\" disabled/>\\n    </label><br>\\n    <label>UserAccountName:\\n      <input [(ngModel)]=\\\"userAccountData.UserAccountName\\\" placeholder=\\\"UserAccountName\\\" disabled/>\\n    </label><br>\\n    <label>ContactNumber:\\n      <input [(ngModel)]=\\\"userAccountData.ContactNumber\\\" placeholder=\\\"ContactNumber\\\" disabled/>\\n    </label><br>\\n    <label>UserName:\\n      <input [(ngModel)]=\\\"userAccountData.UserName\\\" placeholder=\\\"UserName\\\" disabled/>\\n    </label><br>\\n    <label>Password:\\n      <input [(ngModel)]=\\\"userAccountData.Password\\\" placeholder=\\\"Password\\\" disabled/>\\n    </label><br>\\n    <label>CreatedDate:\\n      <input [(ngModel)]=\\\"userAccountData.CreatedDate\\\" placeholder=\\\"CreatedDate\\\" disabled/>\\n    </label><br>\\n    <label>CreatedBy:\\n      <input [(ngModel)]=\\\"userAccountData.CreatedBy\\\" placeholder=\\\"CreatedBy\\\" disabled/>\\n    </label><br>\\n    <label>LastModifiedDate:\\n      <input [(ngModel)]=\\\"userAccountData.LastModifiedDate\\\" placeholder=\\\"LastModifiedDate\\\" disabled/>\\n    </label><br>\\n    <label>LastModifiedBy:\\n      <input [(ngModel)]=\\\"userAccountData.LastModifiedBy\\\" placeholder=\\\"LastModifiedBy\\\" disabled/>\\n    </label><br>\\n    <label>EMailAddress:\\n      <input [(ngModel)]=\\\"userAccountData.EMailAddress\\\" placeholder=\\\"EMailAddress\\\" disabled/>\\n    </label><br>\\n    <label>ContactAddress:\\n      <input [(ngModel)]=\\\"userAccountData.ContactAddress\\\" placeholder=\\\"ContactAddress\\\" disabled/>\\n    </label><br>\\n    \\n  </div>\\n  <button (click)=\\\"navigateToUserAccountList()\\\">Back</button>\\n</div>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3VzZXItYWNjb3VudC91c2VyLWFjY291bnQtdmlldy91c2VyLWFjY291bnQtdmlldy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit , Input} from '@angular/core';\nimport { UserAccountService } from '../user-account.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-account-view',\n  templateUrl: './user-account-view.component.html',\n  styleUrls: ['./user-account-view.component.scss']\n})\nexport class UserAccountViewComponent implements OnInit {\n\n  @Input() userAccountData:any = { \n    UserAccountID :0\n   ,RoleID :0\n   ,UserAccountName :''\n   ,ContactNumber :''\n   ,UserName :''\n   ,Password:''\n   ,CreatedDate :''\n   ,CreatedBy :''\n   ,LastModifiedDate :''\n   ,LastModifiedBy :''\n   ,EMailAddress :''\n   ,ContactAddress :''\n };\n\n  constructor(public rest:UserAccountService, private route: ActivatedRoute, private router: Router){\n\n  }\n\n  ngOnInit() {\n    this.rest.getUserAccount(this.route.snapshot.params['id']).subscribe((data: {}) => {\n      console.log(data);\n      this.userAccountData = data;\n    });  \n  }\n  navigateToUserAccountList() {\n    this.router.navigate(['pages/user-account/user-account-list']);\n}\n\n}\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3VzZXItYWNjb3VudC91c2VyLWFjY291bnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-account',\n  templateUrl: './user-account.component.html',\n  styleUrls: ['./user-account.component.scss']\n})\nexport class UserAccountComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport {NgModule} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport {\n  MatFormFieldModule,\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatStepperModule,\n} from '@angular/material';\n\nimport { UserAccountRoutingModule } from './user-account-routing.module';\nimport { UserAccountComponent } from './user-account.component';\nimport { UserAccountAddComponent } from './user-account-add/user-account-add.component';\nimport { UserAccountEditComponent } from './user-account-edit/user-account-edit.component';\nimport { UserAccountDeleteComponent } from './user-account-delete/user-account-delete.component';\nimport { UserAccountViewComponent } from './user-account-view/user-account-view.component';\nimport { UserAccountListComponent } from './user-account-list/user-account-list.component';\n\n@NgModule({\n  declarations: [UserAccountComponent, UserAccountAddComponent, UserAccountEditComponent, UserAccountDeleteComponent, UserAccountListComponent, UserAccountViewComponent],\n  imports: [\n    CommonModule,\n    UserAccountRoutingModule,\n    TranslateModule,\n    NgbDropdownModule,\n    FormsModule,\n    MatTableModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatStepperModule\n  ]\n\n})\nexport class UserAccountModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserAccountService {\n\n  static readonly endpoint = 'http://mobile.aboorva-ayyappan.com/API/';\n  static readonly endpoint1 = 'http://localhost:50395/API/';\n\n  static readonly httpOptions = {\n    headers: new HttpHeaders({\n    'Content-Type':  'application/json'\n    })\n    };\n\n  constructor(private http: HttpClient) {\n  }\n\n  getUserAccounts(): Observable<any> {\n    return this.http.get(UserAccountService.endpoint + 'UserAccounts').pipe(\n      map(this.extractData));\n  }\n  getUserAccount(id): Observable<any> {\n    return this.http.get(UserAccountService.endpoint + 'UserAccounts/' + id).pipe(\n      map(this.extractData));\n  }\n  \n  addUserAccount (UserAccountData): Observable<any> {\n    console.log(UserAccountData);\n    return this.http.post<any>(UserAccountService.endpoint + 'UserAccounts', JSON.stringify(UserAccountData), UserAccountService.httpOptions).pipe(\n      tap((customer) => console.log(`added user account w/ id=${UserAccountData.UserAccountID}`)),\n      catchError(this.handleError<any>('addUserAccount'))\n    );\n  }\n\n  updateUserAccount (UserAccountData): Observable<any> {\n    console.log(UserAccountData);\n    return this.http.post<any>(UserAccountService.endpoint + 'UserAccounts', JSON.stringify(UserAccountData), UserAccountService.httpOptions).pipe(\n      tap((customer) => console.log(`update user account w/ id=${UserAccountData.UserAccountID}`)),\n      catchError(this.handleError<any>('update'))\n    );\n  }\n  \n  deleteUserAccount (id): Observable<any> {\n    return this.http.get(UserAccountService.endpoint + 'DropUserAccount/' + id).pipe(\n      map(this.extractData));   \n  }\n\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || { };\n  }\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n  \n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n  \n      // TODO: better job of transforming error for user consumption\n      console.log(`${operation} failed: ${error.message}`);\n  \n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n"],"sourceRoot":""}